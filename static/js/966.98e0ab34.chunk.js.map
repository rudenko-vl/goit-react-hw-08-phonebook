{"version":3,"file":"static/js/966.98e0ab34.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactsList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/Loader/Loader.jsx","components/Notify/Notify.jsx","components/Footer/Footer.styled.jsx","components/Footer/Footer.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/LogInForm/LogInForm.jsx","components/NewAccountForm/NewAccountForm.jsx","components/UserMenu/UserMenu.jsx","components/Main/Main.jsx","components/ContactItem/ContactItem.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 30px;\n  outline: 1px solid white;\n  border-radius: 10px;\n`;\nexport const Label = styled.label`\n  font-weight: 500;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  height: 40px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-property: border-color;\n  transition-duration: 500ms;\n  :focus {\n    outline: none;\n    border-color: green;\n  }\n  :hover {\n    border-color: green;\n  }\n`;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { Form, Label, Input } from \"./ContactForm.styled\";\n\nexport const ContactForm = ({onSubmit}) => {\n  const {\n    register,\n    formState: {\n      errors,\n    },\n    handleSubmit,\n    reset,\n  } = useForm({\n    mode: \"onBlur\",\n  });\n\n  const myHandleSubmit = ({name, number}) => {\n    onSubmit({ name, number });\n    reset();\n  };\n\n  return (\n\n    <Form onSubmit={handleSubmit(myHandleSubmit)}>\n      <Label>\n        Name:\n        <Input {...register(\"name\", {\n          required: \"Поле обязательно к заполнению!\",\n          minLength: {\n            value: 2,\n            message: 'Минимум 2 символа'\n          }\n        })}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        />\n      </Label>\n      <div style={{ height: 40 }}>\n        {errors?.name && <p>{errors?.name?.message || \"Error!\" }</p>}\n      </div>\n      <Label>\n        Number:\n        <Input {...register(\"number\", {\n          required: \"Поле обязательно к заполнению!\",\n          minLength: {\n            value: 5,\n            message: 'Минимум 5 символов'\n          }\n        })}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        />\n      </Label>\n      <div style={{ height: 40 }}>\n        {errors?.number && <p>{errors?.number?.message || \"Error!\" }</p>}\n      </div>\n      <Button type=\"submit\"\n          variant=\"contained\"\n        color=\"success\"\n        >Add contact</Button>\n    </Form>\n  )\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  margin-top: 30px;\n  margin-bottom: 50px;\n`;\n\nexport const Item = styled.li`\n  width: 450px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  :not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\nexport const Error = styled.h1`\nmargin-top: 20px;\n color: red;\n`;\nexport const Text = styled.p`\nfont-size: 18px;\nfont-weight: 600;\n`","import { List } from \"./ContactsList.styled\";\nimport { ContactItem, Title } from \"components\";\nimport { Item } from \"./ContactsList.styled\";\n\nexport const ContactsList = ({filteredContacts}) => {\n \n  return (\n    <>\n      {filteredContacts.length > 0 ? (\n        <List>\n          {filteredContacts.map(contact => <Item key={contact.id}>\n            <ContactItem contact={contact}/>\n          </Item>)\n          }\n      </List>): <Title title=\"You don't have contacts yet. Add someone 🙂\"/>}\n      </>\n  )\n};\n\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { ContactsList } from \"components\";\n\nexport const Filter = ({ contacts }) => {\n  const [filter, setFilter] = useState('');\n  const filteredContacts = contacts?.length > 0\n    ? contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.trim().toLowerCase()),\n      )\n    : [];\n  \n  return (\n    <>\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '50ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n      type=\"text\"\n        name='filter'\n        placeholder=\"Contact's name\"\n        value={filter}\n        onChange={ev => setFilter(ev.target.value)}\n    >\n      <TextField id=\"outlined-basic\" label=\"Contact's name\" variant=\"outlined\" color=\"success\" sx={{backgroundColor: \"white\", borderRadius: \"5px\"}} />\n      </Box>\n      <ContactsList filteredContacts={filteredContacts}/>\n      </>\n  );\n  \n};\n\nFilter.propTypes = {\n contacts: PropTypes.array,\n};\n\n","import styled from \"@emotion/styled\";\n\nexport const SectionTitle = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  color: white;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SectionTitle } from \"./Title.styled\";\n\nexport const Title = ({ title }) => {\n  return <SectionTitle>{title}</SectionTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n","import { Oval } from 'react-loader-spinner';\nexport const Loader = () => {\n    return (\n        <Oval\n            height=\"40\"\n            color='white'\n        />\n    )\n};\n\n   ","import toast from 'react-hot-toast';\nexport const notifySucces = (text) => toast.success(text, {\n        duration: 3000,\n        style: {\n          fontWeight: 600,\n          fontSize: \"18px\",\n            backgroundColor: \"#1A9525\",\n            color: \"white\",\n            width: \"700px\",\n            height: \"40px\",}\n});\n    \nexport const notifyError = (text) => toast.error(text, {\n        duration: 3000,\n        style: {\n          fontWeight: 700,\n          fontSize: \"18px\",\n            backgroundColor: \"#FD5454\",\n            color: \"white\",\n            width: \"500px\",\n            height: \"40px\",}\n    });","import styled from \"@emotion/styled\";\nimport { Typography } from \"@mui/material\";\n\nexport const FooterDiv = styled.footer`\nmargin-top: auto;\nwidth: 100%;\npadding: 20px;\nbackground-image: linear-gradient(\n    to bottom,\n    #230CF7 50%,\n    #ffb800 50%\n  );\n`\nexport const Text = styled(Typography)`\nfont-size: 36px;\nfont-weight: 700;\ntext-shadow: 0.5px 0 1px #000;\ntext-align: center;\ncolor: white;\n`","import { Box } from \"@mui/system\";\nimport { FooterDiv, Text } from './Footer.styled';\nexport const Footer = () => {\n    return (\n        <FooterDiv>\n            <Box>\n                <Text>Слава Україні!</Text>\n            </Box>\n        </FooterDiv>\n    )\n}","import styled from \"@emotion/styled\";\nimport { AppBar, Typography } from \"@mui/material\";\nimport { NavLink } from 'react-router-dom';\n\nexport const Bar = styled(AppBar)`\nposition: static;\npadding: 10px;\nbackground-color: #230CF7;\n`\n\nexport const Text = styled(Typography)`\nfont-size: 26px;\nfont-weight: 600;\ntext-shadow: 0.5px 0 1px #000;\n`\nexport const Link = styled(NavLink)`\ntext-decoration: none;\ncolor: white;\nfont-weight: 700;\nfont-size: 24px;\ntransition: transform 700ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover {\n     transform: scale(1.1);\n  }\n&.active {\n    color: #ffb800;\n  }\n`","import { Toolbar, Stack } from \"@mui/material\";\nimport PhoneIphoneIcon from '@mui/icons-material/PhoneIphone';\nimport { Bar, Text, Link } from \"./Header.styled\";\nimport { UserMenu } from \"components\";\nimport { getIsLoggedIn } from \"redux/auth/auth-selectors\";\nimport { useSelector } from \"react-redux\";\n\nexport const Header = () => {\n    const logged = useSelector(getIsLoggedIn);\n\n    return <Bar>\n        <Toolbar>\n            <PhoneIphoneIcon sx={{ mr: 1 }} />\n                <Text\n                variant=\"h6\"\n                component=\"span\">\n                Phonebook\n            </Text>\n            <Stack spacing={3} direction=\"row\" sx={{ml: \"30px\"}}>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/register\">New account</Link>\n                <Link to=\"/login\">Log In</Link>\n                <Link to=\"/phonebook\">Contacts</Link>\n            </Stack>\n            {logged && <UserMenu/>} \n        </Toolbar>\n    </Bar>\n};","import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Form, Label, Input } from \"../ContactForm/ContactForm.styled\";\nimport { Button } from \"@mui/material\";\nimport { login } from \"redux/auth/auth-operations\";\nimport { useDispatch } from \"react-redux\";\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n\nexport const LogInForm = () => {\n    const [visiblePass, setVisiblePass] = useState(false);\n    const dispatch = useDispatch();\n    const {\n        register,\n        formState: {\n            errors,\n        },\n        handleSubmit,\n        reset,\n    } = useForm({\n        mode: \"onBlur\",\n    });\n\n    const toggleVisiblePass = (e) => {\n        setVisiblePass(!visiblePass)\n    };\n    \n    const myHandleSubmit = ({ email, password }) => {\n        dispatch(login({ email, password }));\n        reset();\n    };\n    return (\n        <Form autoComplete=\"off\" onSubmit={handleSubmit(myHandleSubmit)}>\n            <Label>\n                Email:\n                <Input {...register(\"email\", {\n                    required: \"Поле обязательно к заполнению!\",\n                })}\n                pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" title=\"test@gmail.com\"/>\n            </Label>\n            <div style={{ height: 40 }}>\n                {errors?.email && <p>{errors?.email?.message || \"Error!\"}</p>}\n            </div>\n            <Label style={{position: \"relative\"}}>\n                Password:\n                <Input type={visiblePass ? \"text\" : \"password\"} {...register(\"password\", {\n                    required: \"Поле обязательно к заполнению!\",\n                })} />\n                {visiblePass ? <VisibilityOffIcon color=\"primary\" sx={{ position: \"absolute\", top: 30, right: 15 }} onClick={() => { toggleVisiblePass() }}/> : <VisibilityIcon onClick={() => { toggleVisiblePass() }} color=\"primary\" sx={{ position: \"absolute\", top: 30, right: 15 }}/>}\n            </Label>\n            <div style={{ height: 40 }}>\n                {errors?.password && <p>{errors?.password?.message || \"Error!\"}</p>}\n            </div>\n            <Button type=\"submit\"\n                variant=\"contained\"\n                color=\"success\"\n            >Log In</Button>\n        </Form>\n    );\n};","import { useForm } from \"react-hook-form\";\nimport { Form, Label, Input } from \"../ContactForm/ContactForm.styled\";\nimport { Button } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { regUser } from \"redux/auth/auth-operations\";\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { useState } from \"react\";\n\nexport const NewAccountForm = () => {\n    const [visiblePass, setVisiblePass] = useState(false);\n    const dispatch = useDispatch();\n    const {\n        register,\n        formState: {\n            errors,\n        },\n        handleSubmit,\n        reset,\n    } = useForm({\n        mode: \"onBlur\",\n    });\n\n    const toggleVisiblePass = (e) => {\n        setVisiblePass(!visiblePass)\n    };\n\n    const myHandleSubmit = ({ name, email, password }) => {\n        dispatch(regUser({ name, email, password }))\n        reset();\n    };\n    \n    return (\n        <Form autoComplete=\"off\" onSubmit={handleSubmit(myHandleSubmit)}>\n            <Label>\n                Name:\n                <Input {...register(\"name\", {\n                    required: \"Поле обязательно к заполнению!\",\n                    minLength: {\n                        value: 2,\n                        message: 'Минимум 2 символа'\n                    }\n                })} />\n            </Label>\n            <div style={{ height: 30 }}>\n                {errors?.name && <p>{errors?.name?.message || \"Error!\"}</p>}\n            </div>\n            <Label>\n                Email:\n                <Input {...register(\"email\", {\n                    required: \"Поле обязательно к заполнению!\",\n                })}\n                 pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" title=\"test@gmail.com\"/>\n            </Label>\n            <div style={{ height: 30 }}>\n                {errors?.email && <p>{errors?.email?.message || \"Error!\"}</p>}\n            </div>\n            <Label style={{position: \"relative\"}}>\n                Password:\n                <Input type={visiblePass ? \"text\" : \"password\"} {...register(\"password\", {\n                    required: \"Поле обязательно к заполнению!\",\n                    minLength: {\n                        value: 5,\n                        message: 'Пароль должен содержать минимум 5 символов!'\n                    }\n                })} />\n                {visiblePass ? <VisibilityOffIcon color=\"primary\" sx={{ position: \"absolute\", top: 30, right: 15 }} onClick={() => { toggleVisiblePass() }}/> : <VisibilityIcon onClick={() => { toggleVisiblePass() }} color=\"primary\" sx={{ position: \"absolute\", top: 30, right: 15 }}/>}\n            </Label>\n            <div style={{ height: 40 }}>\n                {errors?.password && <p>{errors?.password?.message || \"Error!\"}</p>}\n            </div>\n            <Button type=\"submit\"\n                variant=\"contained\"\n                color=\"success\"\n            >Register</Button>\n        </Form>\n    );\n};","import { useState, Fragment } from 'react';\nimport {Box, Drawer, List, ListItem, ListItemText, Avatar, Stack, Button } from '@mui/material';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport MailIcon from '@mui/icons-material/Mail';\nimport './UserMenu.css';\nimport { deepPurple } from '@mui/material/colors';\nimport { useSelector } from 'react-redux';\nimport { getUserName, getUserEmail } from 'redux/auth/auth-selectors';\nimport { logout } from 'redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport { Toaster } from 'react-hot-toast';\nimport { notifySucces } from 'components';\n\nexport const UserMenu = () => {\n    const [state, setState] = useState({\n        right: false,\n    });\n    const dispatch = useDispatch();\n    const name = useSelector(getUserName);\n    const email = useSelector(getUserEmail);\n   \n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n    \n\n    const list = (anchor) => (\n        <Box\n            sx={{width: \"250px\"}}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n\n            <List>\n                <ListItem>\n                <Stack direction=\"row\" spacing={2}>\n                    <Avatar\n                        sx={{ bgcolor: deepPurple[300] }}\n                        alt={name}\n                        src=\"/broken-image.jpg\"\n                    >\n                        </Avatar>\n                        <ListItemText primary={name}/>\n                </Stack> \n                    </ListItem>\n                    <ListItem>\n                        <ListItemIcon>\n                            <MailIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={email} />\n                </ListItem>\n                <Button onClick={() => { dispatch(logout()); notifySucces('Bye!')}} sx={{ ml: \"80px\", mt: \"15px\"}}>Log Out</Button>\n            </List>\n        </Box>\n    );\n    return (\n        <Stack spacing={3} direction=\"row\" sx={{ ml: \"auto\", alignItems: \"center\" }}>\n            <h2>Hello, {name}</h2>\n                <div>\n      {['right'].map((anchor) => (\n        <Fragment key={anchor}>\n              <Avatar sx={{cursor: \"pointer\"}} src=\"/broken-image.jpg\" onClick={toggleDrawer(anchor, true)}></Avatar>\n          <Drawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n        </Fragment>\n      ))}\n            </div>\n            <Toaster/>\n        </Stack>\n    );\n};\n\n","import styled from \"@emotion/styled\";\nexport const Main = () => {\n    return <Div>\n        <Text>Sign up or sign in!</Text>\n    </Div>\n}\n\nconst Div = styled.div`\nwidth: 100%;\nheight: 100%;\nbackground-image: url(\"https://cdn.pixabay.com/photo/2022/03/04/18/01/ukraine-7047830_960_720.jpg\");\nbackground-size: cover;\nbackground-repeat: no-repeat;\n/* background-position: 50% 50%; */\n`\nconst Text = styled.h1`\nfont-size: 35px;\nmargin-left: auto;\nmargin-right: auto;\ntext-align: center;\ncolor: white;\n`","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport { deepOrange } from '@mui/material/colors';\nimport { Button } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Text } from \"../ContactList/ContactsList.styled\";\nimport { useDeleteContactMutation } from \"redux/contactsApi\";\nimport { Toaster } from 'react-hot-toast';\nimport { Oval } from 'react-loader-spinner';\nimport { notifySucces } from \"../Notify/Notify\";\n\n\nexport const ContactItem = ({contact}) => {\n  const [deleteContact] = useDeleteContactMutation();\n  const [deleting, setDeleting] = useState(false);\n  \n  const handleDeleteContact = async (id) => {\n    setDeleting(true);\n    await deleteContact(id).unwrap();\n    notifySucces(\"Contact removed from phonebook\")\n    setDeleting(false);\n  }\n  \n  return (<>\n        <Stack direction=\"row\" spacing={2}>\n          <Avatar\n            sx={{ bgcolor: deepOrange[400] }}\n            alt={contact.name}\n            src=\"/broken-image.jpg\"\n          >\n          </Avatar>\n        </Stack>\n        <Text>\n          {contact.name}: {contact.number}\n        </Text>\n        {deleting ? <Oval height=\"20\" color=\"white\" /> : <Button\n          id={contact.id}\n          type=\"button\"\n          onClick={() => {\n            handleDeleteContact(contact.id)\n          }}\n          variant=\"outlined\"\n          startIcon={<DeleteIcon />}\n        >Delete\n        </Button>}\n    <Toaster />\n  </>\n  );\n};\n\nContactItem.propTypes = {\n contact: PropTypes.object,\n};"],"names":["Form","styled","Label","Input","ContactForm","onSubmit","useForm","mode","register","errors","formState","handleSubmit","reset","name","number","required","minLength","value","message","pattern","title","style","height","Button","type","variant","color","List","Item","Text","ContactsList","filteredContacts","length","map","contact","ContactItem","id","Title","Filter","contacts","useState","filter","setFilter","toLowerCase","includes","trim","Box","component","sx","m","width","noValidate","autoComplete","placeholder","onChange","ev","target","TextField","label","backgroundColor","borderRadius","SectionTitle","Loader","notifySucces","text","toast","duration","fontWeight","fontSize","notifyError","FooterDiv","Typography","Footer","Bar","AppBar","Link","NavLink","Header","logged","useSelector","getIsLoggedIn","Toolbar","PhoneIphone","mr","Stack","spacing","direction","ml","to","LogInForm","visiblePass","setVisiblePass","dispatch","useDispatch","toggleVisiblePass","e","email","password","login","position","VisibilityOff","top","right","onClick","Visibility","NewAccountForm","regUser","UserMenu","state","setState","getUserName","getUserEmail","toggleDrawer","anchor","open","event","key","list","role","onKeyDown","ListItem","Avatar","bgcolor","deepPurple","alt","src","ListItemText","primary","ListItemIcon","Mail","logout","mt","alignItems","Fragment","cursor","Drawer","onClose","Main","Div","useDeleteContactMutation","deleteContact","deleting","setDeleting","handleDeleteContact","unwrap","deepOrange","startIcon","Delete"],"sourceRoot":""}