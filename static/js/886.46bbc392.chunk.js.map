{"version":3,"file":"static/js/886.46bbc392.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactsList.styled.jsx","components/Loader/Loader.jsx","components/Notify/Notify.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/Footer/Footer.styled.jsx","components/Footer/Footer.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/LogInForm/LogInForm.jsx","components/NewAccountForm/NewAccountForm.jsx","components/UserMenu/UserMenu.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 30px;\n  outline: 1px solid white;\n  border-radius: 10px;\n`;\nexport const Label = styled.label`\n  font-weight: 500;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  height: 40px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-property: border-color;\n  transition-duration: 500ms;\n  :focus {\n    outline: none;\n    border-color: green;\n  }\n  :hover {\n    border-color: green;\n  }\n`;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { Form, Label, Input } from \"./ContactForm.styled\";\n\nexport const ContactForm = ({onSubmit}) => {\n  const {\n    register,\n    formState: {\n      errors,\n    },\n    handleSubmit,\n    reset,\n  } = useForm({\n    mode: \"onBlur\",\n  });\n\n  const myHandleSubmit = ({name, phone}) => {\n    onSubmit({ name, phone });\n    reset();\n  };\n\n  return (\n\n    <Form onSubmit={handleSubmit(myHandleSubmit)}>\n      <Label>\n        Name:\n        <Input {...register(\"name\", {\n          required: \"Поле обязательно к заполнению!\",\n          minLength: {\n            value: 2,\n            message: 'Минимум 2 символа'\n          }\n        })}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        />\n      </Label>\n      <div style={{ height: 40 }}>\n        {errors?.name && <p>{errors?.name?.message || \"Error!\" }</p>}\n      </div>\n      <Label>\n        Number:\n        <Input {...register(\"phone\", {\n          required: \"Поле обязательно к заполнению!\",\n          minLength: {\n            value: 5,\n            message: 'Минимум 5 символов'\n          }\n        })}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        />\n      </Label>\n      <div style={{ height: 40 }}>\n        {errors?.number && <p>{errors?.number?.message || \"Error!\" }</p>}\n      </div>\n      <Button type=\"submit\"\n          variant=\"contained\"\n        color=\"success\"\n        >Add contact</Button>\n    </Form>\n  )\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  margin-top: 30px;\n`;\n\nexport const Item = styled.li`\n  width: 450px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  :not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\nexport const Error = styled.h1`\nmargin-top: 20px;\n color: red;\n`;\nexport const Text = styled.p`\nfont-size: 18px;\nfont-weight: 600;\n`","import { Oval } from  'react-loader-spinner'\nexport const Loader = () => {\n    return (\n        <Oval\n            height=\"60\"\n            width=\"60\"\n        />\n    )\n};","import toast from 'react-hot-toast';\nexport const notifySucces = (text) => toast.success(text, {\n        duration: 3000,\n        style: {\n          fontWeight: 600,\n          fontSize: \"18px\",\n            backgroundColor: \"#1A9525\",\n            color: \"white\",\n            width: \"700px\",\n            height: \"40px\",}\n});\n    \nexport const notifyError = (text) => toast.error(text, {\n        duration: 3000,\n        style: {\n          fontWeight: 700,\n          fontSize: \"18px\",\n            backgroundColor: \"#FD5454\",\n            color: \"white\",\n            width: \"500px\",\n            height: \"40px\",}\n    });","import React, { useState } from \"react\";\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport { deepOrange } from '@mui/material/colors';\nimport { Button } from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PropTypes from \"prop-types\";\nimport { Item, List, Error, Text } from \"./ContactsList.styled\";\nimport { useDeleteContactMutation, useGetContactsQuery } from \"redux/contactsApi\";\nimport { Toaster } from 'react-hot-toast';\nimport { Loader } from \"components/Loader/Loader\";\nimport { notifySucces } from \"../Notify/Notify\";\n\nexport const ContactsList = ({ filter }) => {\n  const [loading, setLoading] = useState(false);\n  const {data = [], isLoading, isError} = useGetContactsQuery(filter);\n  const [deleteContact] = useDeleteContactMutation();\n  const handleDeleteContact = async (id) => {\n    setLoading(true);\n    await deleteContact(id).unwrap();\n    setLoading(false);\n  }\n  if (loading || isLoading) return <Loader/>\n  if (isError) return <Error>Sorry, server error!</Error>\n  if (data.length === 0) return <h2>You don't have contacts yet. Add someone 🙂</h2>\n  \n  return (\n    <List>\n      {data.map((contact) => (\n        <Item key={contact.id}>\n          <Stack direction=\"row\" spacing={2}>\n      <Avatar\n        sx={{ bgcolor: deepOrange[400] }}\n        alt={contact.name}\n        src=\"/broken-image.jpg\"\n      >\n      </Avatar>\n    </Stack>\n          <Text>\n            {contact.name}: {contact.phone}\n          </Text>\n          <Button\n            id={contact.id}\n            type=\"button\"\n            onClick={() => {\n              handleDeleteContact(contact.id)\n              notifySucces(`${contact.name} removed from phonebook`)\n            }}\n            variant=\"outlined\"\n            startIcon={<DeleteIcon />}\n          >\n            Delete\n          </Button>\n        </Item>\n      ))}\n      <Toaster/>\n    </List>\n  );\n};\n\nContactsList.propTypes = {\n  filter: PropTypes.string.isRequired,\n};\n\n","import PropTypes from \"prop-types\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport const Filter = ({ onChangeFilter, filter }) => {\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '50ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n      type=\"text\"\n        name='filter'\n        placeholder=\"Contact's name\"\n        value={filter}\n        onChange={onChangeFilter}\n    >\n      <TextField id=\"outlined-basic\" label=\"Contact's name\" variant=\"outlined\" color=\"success\" sx={{backgroundColor: \"white\", borderRadius: \"5px\"}} />\n    </Box>\n  );\n  \n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\n","import styled from \"@emotion/styled\";\n\nexport const SectionTitle = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  color: white;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SectionTitle } from \"./Title.styled\";\n\nexport const Title = ({ title }) => {\n  return <SectionTitle>{title}</SectionTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n","import styled from \"@emotion/styled\";\nimport { Typography } from \"@mui/material\";\n\nexport const FooterDiv = styled.footer`\nmargin-top: auto;\nwidth: 100%;\npadding: 20px;\nbackground-image: linear-gradient(\n    to bottom,\n    #230CF7 50%,\n    #ffb800 50%\n  );\n`\nexport const Text = styled(Typography)`\nfont-size: 36px;\nfont-weight: 700;\ntext-shadow: 0.5px 0 1px #000;\ntext-align: center;\ncolor: white;\n`","import { Box } from \"@mui/system\";\nimport { FooterDiv, Text } from './Footer.styled';\nexport const Footer = () => {\n    return (\n        <FooterDiv>\n            <Box>\n                <Text>Слава Україні!</Text>\n            </Box>\n        </FooterDiv>\n    )\n}","import styled from \"@emotion/styled\";\nimport { AppBar, Typography } from \"@mui/material\";\nimport { NavLink } from 'react-router-dom';\n\nexport const Bar = styled(AppBar)`\nposition: static;\npadding: 10px;\nbackground-color: #230CF7;\n`\n\nexport const Text = styled(Typography)`\nfont-size: 26px;\nfont-weight: 600;\ntext-shadow: 0.5px 0 1px #000;\n`\nexport const Link = styled(NavLink)`\ntext-decoration: none;\ncolor: white;\nfont-weight: 700;\nfont-size: 24px;\ntransition: transform 700ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover {\n     transform: scale(1.1);\n  }\n&.active {\n    color: #ffb800;\n  }\n`","import { Toolbar, Stack } from \"@mui/material\";\nimport PhoneIphoneIcon from '@mui/icons-material/PhoneIphone';\nimport { Bar, Text, Link } from \"./Header.styled\";\nimport { UserMenu } from \"components\";\n\nexport const Header = () => {\n    return <Bar>\n        <Toolbar>\n            <PhoneIphoneIcon sx={{ mr: 1 }} />\n                <Text\n                variant=\"h6\"\n                component=\"span\">\n                Phonebook\n            </Text>\n            <Stack spacing={3} direction=\"row\" sx={{ml: \"30px\"}}>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/register\">New account</Link>\n                <Link to=\"/login\">Log In</Link>\n                <Link to=\"/phonebook\">Contacts</Link>\n            </Stack>\n            <UserMenu/>\n        </Toolbar>\n    </Bar>\n};","import { useForm } from \"react-hook-form\";\nimport { Form, Label, Input } from \"../ContactForm/ContactForm.styled\";\nimport { Button } from \"@mui/material\";\n\nexport const LogInForm = () => {\n    const {\n        register,\n        formState: {\n            errors,\n        },\n        handleSubmit,\n        reset,\n    } = useForm({\n        mode: \"onBlur\",\n    });\n    \n    const myHandleSubmit = (data) => {\n        // onSubmit({ email, password });\n        console.log(JSON.stringify(data))\n        reset();\n    };\n    \n    return (\n        <Form onSubmit={handleSubmit(myHandleSubmit)}>\n            <Label>\n                Email:\n                <Input {...register(\"email\", {\n                    required: \"Поле обязательно к заполнению!\",\n                })}\n                pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" title=\"test@gmail.com\"/>\n            </Label>\n            <div style={{ height: 40 }}>\n                {errors?.email && <p>{errors?.email?.message || \"Error!\"}</p>}\n            </div>\n            <Label>\n                Password:\n                <Input {...register(\"password\", {\n                    required: \"Поле обязательно к заполнению!\",\n                    // minLength: {\n                    //     value: 5,\n                    //     message: 'Минимум 5 символов!'\n                    // }\n                })} />\n            </Label>\n            <div style={{ height: 40 }}>\n                {errors?.password && <p>{errors?.password?.message || \"Error!\"}</p>}\n            </div>\n            <Button type=\"submit\"\n                variant=\"contained\"\n                color=\"success\"\n            >Log In</Button>\n        </Form>\n    );\n};","import { useForm } from \"react-hook-form\";\nimport { Form, Label, Input } from \"../ContactForm/ContactForm.styled\";\nimport { Button } from \"@mui/material\";\n\nexport const NewAccountForm = () => {\n    const {\n        register,\n        formState: {\n            errors,\n        },\n        handleSubmit,\n        reset,\n    } = useForm({\n        mode: \"onBlur\",\n    });\n    \n    const myHandleSubmit = ({ name, email, password }) => {\n        // onSubmit({ name, email, password });\n        console.log({name, email, password})\n        reset();\n    };\n    \n    return (\n        <Form onSubmit={handleSubmit(myHandleSubmit)}>\n            <Label>\n                Name:\n                <Input {...register(\"name\", {\n                    required: \"Поле обязательно к заполнению!\",\n                    minLength: {\n                        value: 2,\n                        message: 'Минимум 2 символа'\n                    }\n                })} />\n            </Label>\n            <div style={{ height: 30 }}>\n                {errors?.name && <p>{errors?.name?.message || \"Error!\"}</p>}\n            </div>\n            <Label>\n                Email:\n                <Input {...register(\"email\", {\n                    required: \"Поле обязательно к заполнению!\",\n                })}\n                 pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" title=\"test@gmail.com\"/>\n            </Label>\n            <div style={{ height: 30 }}>\n                {errors?.email && <p>{errors?.email?.message || \"Error!\"}</p>}\n            </div>\n            <Label>\n                Password:\n                <Input {...register(\"password\", {\n                    required: \"Поле обязательно к заполнению!\",\n                    minLength: {\n                        value: 5,\n                        message: 'Пароль должен содержать минимум 5 символов!'\n                    }\n                })} />\n            </Label>\n            <div style={{ height: 40 }}>\n                {errors?.password && <p>{errors?.password?.message || \"Error!\"}</p>}\n            </div>\n            <Button type=\"submit\"\n                variant=\"contained\"\n                color=\"success\"\n            >Register</Button>\n        </Form>\n    );\n};","import { useState, Fragment } from 'react';\nimport {Box, Drawer, List, ListItem, ListItemText, Avatar, Stack, Button } from '@mui/material';\nimport ListItemIcon from '@mui/material/ListItemIcon';\n// import InboxIcon from '@mui/icons-material/MoveToInbox';\nimport MailIcon from '@mui/icons-material/Mail';\nimport './UserMenu.css';\nimport { deepPurple  } from '@mui/material/colors';\n\nexport const UserMenu = () => {\n    const [state, setState] = useState({\n        right: false,\n    });\n    const name = \"Amigo\";\n    const email = 'amigo@gmail.com';\n    \n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n    \n\n    const list = (anchor) => (\n        <Box\n            sx={{width: \"250px\"}}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n\n            <List>\n                <ListItem>\n                <Stack direction=\"row\" spacing={2}>\n                    <Avatar\n                        sx={{ bgcolor: deepPurple[300] }}\n                        alt={name}\n                        src=\"/broken-image.jpg\"\n                    >\n                        </Avatar>\n                        <ListItemText primary={name}/>\n                </Stack> \n                    </ListItem>\n                    <ListItem>\n                        <ListItemIcon>\n                            <MailIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={email} />\n                </ListItem>\n                <Button sx={{ ml: \"80px\", mt: \"15px\"}}>Log Out</Button>\n            </List>\n            {/* <List>\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>\n                            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n                <Button sx={{ ml: \"80px\", mt: \"15px\"}}>Log Out</Button>\n            </List> */}\n        </Box>\n    );\n    return (\n        <Stack spacing={3} direction=\"row\" sx={{ ml: \"auto\", alignItems: \"center\" }}>\n            <h2>Hello, Amigo!</h2>\n                <div>\n      {['right'].map((anchor) => (\n        <Fragment key={anchor}>\n              <Avatar sx={{cursor: \"pointer\"}} src=\"/broken-image.jpg\" onClick={toggleDrawer(anchor, true)}></Avatar>\n          <Drawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n        </Fragment>\n      ))}\n    </div>\n        </Stack>\n    );\n};\n\n"],"names":["Form","styled","Label","Input","ContactForm","onSubmit","useForm","mode","register","errors","formState","handleSubmit","reset","name","phone","required","minLength","value","message","pattern","title","style","height","number","type","variant","color","List","Item","Error","Text","Loader","width","notifySucces","text","toast","duration","fontWeight","fontSize","backgroundColor","notifyError","ContactsList","filter","useState","loading","setLoading","useGetContactsQuery","data","isLoading","isError","useDeleteContactMutation","deleteContact","handleDeleteContact","id","unwrap","length","map","contact","Stack","direction","spacing","Avatar","sx","bgcolor","deepOrange","alt","src","onClick","startIcon","Delete","Filter","onChangeFilter","Box","component","m","noValidate","autoComplete","placeholder","onChange","TextField","label","borderRadius","SectionTitle","Title","FooterDiv","Typography","Footer","Bar","AppBar","Link","NavLink","Header","Toolbar","PhoneIphone","mr","ml","to","LogInForm","console","log","JSON","stringify","email","password","NewAccountForm","UserMenu","right","state","setState","toggleDrawer","anchor","open","event","key","list","role","onKeyDown","ListItem","deepPurple","ListItemText","primary","ListItemIcon","Mail","mt","alignItems","Fragment","cursor","Drawer","onClose"],"sourceRoot":""}