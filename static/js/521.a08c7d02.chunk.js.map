{"version":3,"file":"static/js/521.a08c7d02.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactsList.styled.jsx","components/ContactList/ContactList.jsx","redux/filter/selectors.jsx","components/Filter/Filter.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/Loader/Loader.jsx","components/Notify/Notify.jsx","components/Footer/Footer.styled.jsx","components/Footer/Footer.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/LogInForm/LogInForm.jsx","components/NewAccountForm/NewAccountForm.jsx","components/UserMenu/UserMenu.jsx","components/Main/Main.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/UpdateContact/UpdateContact.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  padding: 30px;\n  outline: 1px solid white;\n  border-radius: 10px;\n`;\nexport const Label = styled.label`\n  font-weight: 500;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  height: 40px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-property: border-color;\n  transition-duration: 500ms;\n  :focus {\n    outline: none;\n    border-color: green;\n  }\n  :hover {\n    border-color: green;\n  }\n`;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"@mui/material\";\nimport PropTypes from \"prop-types\";\nimport { Form, Label, Input } from \"./ContactForm.styled\";\n\nexport const ContactForm = ({onSubmit}) => {\n  const {\n    register,\n    formState: {\n      errors,\n    },\n    handleSubmit,\n    reset,\n  } = useForm({\n    mode: \"onBlur\",\n  });\n\n  const myHandleSubmit = ({name, number}) => {\n    onSubmit({ name, number });\n    reset();\n  };\n\n  return (\n\n    <Form onSubmit={handleSubmit(myHandleSubmit)}>\n      <Label>\n        Name:\n        <Input {...register(\"name\", {\n          required: \"Поле обязательно к заполнению!\",\n          minLength: {\n            value: 2,\n            message: 'Минимум 2 символа'\n          }\n        })}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        />\n      </Label>\n      <div style={{ height: 40 }}>\n        {errors?.name && <p>{errors?.name?.message || \"Error!\" }</p>}\n      </div>\n      <Label>\n        Number:\n        <Input {...register(\"number\", {\n          required: \"Поле обязательно к заполнению!\",\n          minLength: {\n            value: 5,\n            message: 'Минимум 5 символов'\n          }\n        })}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        />\n      </Label>\n      <div style={{ height: 40 }}>\n        {errors?.number && <p>{errors?.number?.message || \"Error!\" }</p>}\n      </div>\n      <Button type=\"submit\"\n          variant=\"contained\"\n        color=\"success\"\n        >Add contact</Button>\n    </Form>\n  )\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\nimport { Button } from \"@mui/material\";\n\nexport const List = styled.ul`\n  margin-top: 30px;\n  margin-bottom: 50px;\n`;\n\nexport const Item = styled.li`\n  min-width: 500px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  :not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\nexport const Error = styled.h1`\nmargin-top: 20px;\n color: red;\n`;\nexport const Text = styled.p`\npadding-right: 15px;\npadding-left: 15px;\nfont-size: 18px;\nfont-weight: 600;\n`\n\nexport const Ul = styled.ul`\ndisplay: flex;\n`\nexport const UpdBtn = styled(Button)`\nmargin-left: 15px;\n:hover{\n  background: #4caf50;\n} \n`\nexport const DelBtn = styled(Button)`\n:hover{\n  background: #bf1650;\n} \n`\nexport const Div = styled.div`\n display: flex;\n justify-content: space-between;\n align-items: center;\n margin-top: 20px;\n padding: 10px;\n border: 2px solid white;\n border-radius: 5px;\n width: 400px;\n > h2 {\n   margin:0;\n   padding: 0;\n }\n`;\n\nexport const SortBtn = styled(Button)`\nheight: 40px;\n:hover{\n  background: #4caf50;\n} \n`","import { List } from \"./ContactsList.styled\";\nimport { ContactItem, Title } from \"components\";\nimport { Item } from \"./ContactsList.styled\";\nimport { SortBtn, Div } from \"./ContactsList.styled\";\n\nexport const ContactsList = ({ filteredContacts }) => {\n  \n  const sortedContacts = filteredContacts.sort((a, b) => a.name.localeCompare(b.name));\n    \n  return (\n    <>\n      <Div>\n        <SortBtn\n          type=\"button\"\n          // onClick={}\n        >Sort</SortBtn>\n      <h2>Total contacts - {sortedContacts.length}</h2>\n      </Div>\n      {sortedContacts.length > 0 ? (\n        <List>\n          {sortedContacts.map(contact => <Item key={contact.id}>\n            <ContactItem\n              name={contact.name}\n              number={contact.number}\n              id={contact.id}\n            />\n          </Item>)\n          }\n      </List>): <Title title=\"You don't have contacts yet. Add someone 🙂\"/>}\n      </>\n  )\n};\n\n","const getFilter = (state) => state.filter;\n\nexport { getFilter };","import { useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport { ContactsList } from \"components\";\nimport { inputСhange } from \"redux/filter/action\";\nimport { getFilter } from \"redux/filter/selectors\";\nimport { useSelector } from \"react-redux\";\n\nexport const Filter = ({contacts}) => {\n  \n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n  const changeFilter = ({ target: { value } }) => dispatch(inputСhange(value));\n  const filteredContacts = contacts?.length > 0\n    ? contacts.filter(contact =>\n        contact.name.toLowerCase().includes(value.trim().toLowerCase()),\n      )\n    : [];\n  \n  return (\n    <>\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '50ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n      type=\"text\"\n        name='filter'\n        placeholder=\"Contact's name\"\n        value={value}\n        onChange={changeFilter}\n    >\n        <TextField id=\"filled-basic\" label=\"Contact's name\" variant=\"filled\" color=\"success\" sx={{ backgroundColor: \"white\", borderRadius: \"5px\" }}/>\n      </Box>\n      <ContactsList filteredContacts={filteredContacts}/>\n      </>\n  );\n  \n};\n\nFilter.propTypes = {\n contacts: PropTypes.array,\n};\n","import styled from \"@emotion/styled\";\n\nexport const SectionTitle = styled.h2`\n  font-size: 30px;\n  font-weight: 600;\n  color: white;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SectionTitle } from \"./Title.styled\";\n\nexport const Title = ({ title }) => {\n  return <SectionTitle>{title}</SectionTitle>;\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n","import { Oval } from 'react-loader-spinner';\nexport const Loader = () => {\n    return (\n        <Oval\n            height=\"40\"\n            color='white'\n        />\n    )\n};\n\n   ","import toast from 'react-hot-toast';\nexport const notifySucces = (text) => toast.success(text, {\n        duration: 3000,\n        style: {\n          fontWeight: 600,\n          fontSize: \"18px\",\n            backgroundColor: \"#1A9525\",\n            color: \"white\",\n            width: \"700px\",\n            height: \"40px\",}\n});\n    \nexport const notifyError = (text) => toast.error(text, {\n        duration: 3000,\n        style: {\n          fontWeight: 700,\n          fontSize: \"18px\",\n            backgroundColor: \"#FD5454\",\n            color: \"white\",\n            width: \"500px\",\n            height: \"40px\",}\n});\n    \nexport const notifyWarning = (text) => toast(text, {\n  icon: '❕',\n        duration: 2000,\n        style: {\n          fontWeight: 700,\n          fontSize: \"18px\",\n            backgroundColor: \"#eeff41\",\n            color: \"#651fff\",\n            width: \"300px\",\n            height: \"40px\",}\n    });","import styled from \"@emotion/styled\";\nimport { Typography } from \"@mui/material\";\n\nexport const FooterDiv = styled.footer`\nmargin-top: auto;\nwidth: 100%;\npadding: 20px;\nbackground-image: linear-gradient(\n    to bottom,\n    #230CF7 50%,\n    #ffb800 50%\n  );\n`\nexport const Text = styled(Typography)`\nfont-size: 36px;\nfont-weight: 700;\ntext-shadow: 0.5px 0 1px #000;\ntext-align: center;\ncolor: white;\n`","import { Box } from \"@mui/system\";\nimport { FooterDiv, Text } from './Footer.styled';\nexport const Footer = () => {\n    return (\n        <FooterDiv>\n            <Box>\n                <Text>Слава Україні!</Text>\n            </Box>\n        </FooterDiv>\n    )\n}","import styled from \"@emotion/styled\";\nimport { AppBar, Typography } from \"@mui/material\";\nimport { NavLink } from 'react-router-dom';\n\nexport const Bar = styled(AppBar)`\nposition: static;\npadding: 10px;\nbackground-color: #230CF7;\n`\n\nexport const Text = styled(Typography)`\nfont-size: 26px;\nfont-weight: 600;\ntext-shadow: 0.5px 0 1px #000;\n`\nexport const Link = styled(NavLink)`\ntext-decoration: none;\ncolor: white;\nfont-weight: 700;\nfont-size: 24px;\ntransition: transform 700ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover {\n     transform: scale(1.1);\n  }\n&.active {\n    color: #ffb800;\n  }\n`","import { Toolbar, Stack } from \"@mui/material\";\nimport PhoneIphoneIcon from '@mui/icons-material/PhoneIphone';\nimport { Bar, Text, Link } from \"./Header.styled\";\nimport { UserMenu } from \"components\";\nimport { getIsLoggedIn } from \"redux/auth/auth-selectors\";\nimport { useSelector } from \"react-redux\";\n\nexport const Header = () => {\n    const logged = useSelector(getIsLoggedIn);\n\n    return <Bar>\n        <Toolbar>\n            <PhoneIphoneIcon sx={{ mr: 1 }} />\n                <Text\n                variant=\"h6\"\n                component=\"span\">\n                Phonebook\n            </Text>\n            {logged ? <UserMenu/> :\n            <Stack spacing={3} direction=\"row\" sx={{ml: \"30px\"}}>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/register\">New account</Link>\n                <Link to=\"/login\">Log In</Link>\n            </Stack>}\n        </Toolbar>\n\n    </Bar>\n};","import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Form, Label, Input } from \"../ContactForm/ContactForm.styled\";\nimport { Button } from \"@mui/material\";\nimport { login } from \"redux/auth/auth-operations\";\nimport { useDispatch } from \"react-redux\";\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { notifySucces } from \"components\";\n\nexport const LogInForm = () => {\n    const [visiblePass, setVisiblePass] = useState(false);\n    const dispatch = useDispatch();\n    const {\n        register,\n        formState: {\n            errors,\n        },\n        handleSubmit,\n        reset,\n    } = useForm({\n        mode: \"onBlur\",\n    });\n\n    const toggleVisiblePass = (e) => {\n        setVisiblePass(!visiblePass)\n    };\n\n    const myHandleSubmit = ({ email, password }) => {\n        dispatch(login({ email, password }));\n        reset();\n        setTimeout(()=>{notifySucces(`Hello, ${email}!`)}, 500)\n    };\n    return (\n        <Form autoComplete=\"off\" onSubmit={handleSubmit(myHandleSubmit)}>\n            <Label>\n                Email:\n                <Input {...register(\"email\", {\n                    required: \"Поле обязательно к заполнению!\",\n                })}\n                pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" title=\"test@gmail.com\"/>\n            </Label>\n            <div style={{ height: 40 }}>\n                {errors?.email && <p>{errors?.email?.message || \"Error!\"}</p>}\n            </div>\n            <Label style={{position: \"relative\"}}>\n                Password:\n                <Input type={visiblePass ? \"text\" : \"password\"} {...register(\"password\", {\n                    required: \"Поле обязательно к заполнению!\",\n                })} />\n                {visiblePass ? <VisibilityOffIcon color=\"primary\" sx={{ position: \"absolute\", top: 30, right: 15 }} onClick={() => { toggleVisiblePass() }}/> : <VisibilityIcon onClick={() => { toggleVisiblePass() }} color=\"primary\" sx={{ position: \"absolute\", top: 30, right: 15 }}/>}\n            </Label>\n            <div style={{ height: 40 }}>\n                {errors?.password && <p>{errors?.password?.message || \"Error!\"}</p>}\n            </div>\n            <Button type=\"submit\"\n                variant=\"contained\"\n                color=\"success\"\n            >Log In</Button>\n        </Form>\n    );\n};","import { useForm } from \"react-hook-form\";\nimport { Form, Label, Input } from \"../ContactForm/ContactForm.styled\";\nimport { Button } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { regUser } from \"redux/auth/auth-operations\";\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { useState } from \"react\";\n\nexport const NewAccountForm = () => {\n    const [visiblePass, setVisiblePass] = useState(false);\n    const dispatch = useDispatch();\n    const {\n        register,\n        formState: {\n            errors,\n        },\n        handleSubmit,\n        reset,\n    } = useForm({\n        mode: \"onBlur\",\n    });\n\n    const toggleVisiblePass = (e) => {\n        setVisiblePass(!visiblePass)\n    };\n\n    const myHandleSubmit = ({ name, email, password }) => {\n        dispatch(regUser({ name, email, password }))\n        reset();\n    };\n    \n    return (\n        <Form autoComplete=\"off\" onSubmit={handleSubmit(myHandleSubmit)}>\n            <Label>\n                Name:\n                <Input {...register(\"name\", {\n                    required: \"Поле обязательно к заполнению!\",\n                    minLength: {\n                        value: 2,\n                        message: 'Минимум 2 символа'\n                    }\n                })} />\n            </Label>\n            <div style={{ height: 30 }}>\n                {errors?.name && <p>{errors?.name?.message || \"Error!\"}</p>}\n            </div>\n            <Label>\n                Email:\n                <Input {...register(\"email\", {\n                    required: \"Поле обязательно к заполнению!\",\n                })}\n                 pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\" title=\"test@gmail.com\"/>\n            </Label>\n            <div style={{ height: 30 }}>\n                {errors?.email && <p>{errors?.email?.message || \"Error!\"}</p>}\n            </div>\n            <Label style={{position: \"relative\"}}>\n                Password:\n                <Input type={visiblePass ? \"text\" : \"password\"} {...register(\"password\", {\n                    required: \"Поле обязательно к заполнению!\",\n                    minLength: {\n                        value: 5,\n                        message: 'Пароль должен содержать минимум 5 символов!'\n                    }\n                })} />\n                {visiblePass ? <VisibilityOffIcon color=\"primary\" sx={{ position: \"absolute\", top: 30, right: 15 }} onClick={() => { toggleVisiblePass() }}/> : <VisibilityIcon onClick={() => { toggleVisiblePass() }} color=\"primary\" sx={{ position: \"absolute\", top: 30, right: 15 }}/>}\n            </Label>\n            <div style={{ height: 40 }}>\n                {errors?.password && <p>{errors?.password?.message || \"Error!\"}</p>}\n            </div>\n            <Button type=\"submit\"\n                variant=\"contained\"\n                color=\"success\"\n            >Register</Button>\n        </Form>\n    );\n};","import { useState, Fragment } from 'react';\nimport {Box, Drawer, List, ListItem, ListItemText, Avatar, Stack } from '@mui/material';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport MailIcon from '@mui/icons-material/Mail';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport './UserMenu.css';\nimport { deepPurple } from '@mui/material/colors';\nimport { useSelector } from 'react-redux';\nimport { getUserName, getUserEmail } from 'redux/auth/auth-selectors';\nimport { logout } from 'redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport { DelBtn } from 'components/ContactList/ContactsList.styled';\n\nexport const UserMenu = () => {\n    const [state, setState] = useState({\n        right: false,\n    });\n    const dispatch = useDispatch();\n    const name = useSelector(getUserName);\n    const email = useSelector(getUserEmail);\n    const logOut = () => {\n        dispatch(logout());\n    }\n   \n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n    \n\n    const list = (anchor) => (\n        <Box\n            sx={{width: \"250px\"}}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n\n            <List>\n                <ListItem>\n                <Stack direction=\"row\" spacing={2}>\n                    <Avatar\n                        sx={{ bgcolor: deepPurple[300] }}\n                        alt={name}\n                        src=\"/broken-image.jpg\"\n                    >\n                        </Avatar>\n                        <ListItemText primary={name}/>\n                </Stack> \n                    </ListItem>\n                    <ListItem>\n                        <ListItemIcon>\n                            <MailIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={email} />\n                </ListItem>\n                <DelBtn onClick={logOut} startIcon={<LogoutIcon />} sx={{ ml: \"80px\", mt: \"15px\"}}>Log Out</DelBtn>\n            </List>\n        </Box>\n    );\n    return (\n        <Stack spacing={3} direction=\"row\" sx={{ ml: \"auto\", alignItems: \"center\" }}>\n            <h2>Hello, {name}</h2>\n                <div>\n      {['right'].map((anchor) => (\n        <Fragment key={anchor}>\n              <Avatar sx={{cursor: \"pointer\"}} src=\"/broken-image.jpg\" onClick={toggleDrawer(anchor, true)}></Avatar>\n          <Drawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n        </Fragment>\n      ))}\n            </div>\n        </Stack>\n    );\n};\n\n","import styled from \"@emotion/styled\";\nexport const Main = () => {\n    return <Div>\n        <Text>Sign up or sign in!</Text>\n    </Div>\n}\n\nconst Div = styled.div`\nwidth: 100%;\nheight: 100%;\nbackground-image: url(\"https://cdn.pixabay.com/photo/2022/03/04/18/01/ukraine-7047830_960_720.jpg\");\nbackground-size: cover;\nbackground-repeat: no-repeat;\n/* background-position: 50% 50%; */\n`\nconst Text = styled.h1`\nfont-size: 35px;\nmargin-left: auto;\nmargin-right: auto;\ntext-align: center;\ncolor: white;\n`","import styled from \"@emotion/styled\";\nimport { Box } from '@mui/material';\nimport {TextField} from '@mui/material';\n\nexport const ModalBox = styled(Box)`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%);\nwidth: 450px;\nmin-height: 150px;\nbackground-color: white;\npadding: 40px;\nborder: 2px solid #000;\nbox-shadow: 24;\ncolor: black;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`\nexport const Input = styled(TextField)`\nbackground-color: white;\nborder-radius: 5px;\nmargin-bottom: 20px;\n`","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Avatar, Stack, Modal} from '@mui/material';\nimport { deepOrange } from '@mui/material/colors';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ChangeCircleSharpIcon from '@mui/icons-material/ChangeCircleSharp';\nimport { Text } from \"../ContactList/ContactsList.styled\";\nimport { useDeleteContactMutation, useUpdateContactMutation } from \"redux/contactsApi\";\nimport { Toaster } from 'react-hot-toast';\nimport { Oval } from 'react-loader-spinner';\nimport { Ul, UpdBtn, DelBtn } from \"components/ContactList/ContactsList.styled\";\nimport { ModalBox } from \"./ContactItem.styled\";\nimport { UpdateContact, notifySucces } from \"components\";\n\n\nexport const ContactItem = ({ name, number, id }) => {\n  const [deleteContact] = useDeleteContactMutation();\n  const [updateContact] = useUpdateContactMutation();\n  const [deleting, setDeleting] = useState(false);\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const [openUpd, setOpenUpd] = useState(false);\n  \n  const handleContactUpdate = (contact) => {\n   const data = { ...contact, id };\n    updateContact(data);\n  };\n\n   const showUpdModal = (e) => {\n        setOpenUpd(!openUpd)\n    };\n\n \n  const handleDeleteContact = async (id) => {\n    setDeleting(true);\n    await deleteContact(id).unwrap();\n    setTimeout(() => {notifySucces(\"Contact removed from phonebook\")}, 1000)\n    setDeleting(false);\n  }\n\n  return (<>\n        <Stack direction=\"row\" spacing={2}>\n          <Avatar\n            sx={{ bgcolor: deepOrange[400] }}\n            alt={name}\n            src=\"/broken-image.jpg\"\n          >\n          </Avatar>\n        </Stack>\n        <Text>\n          {name}: {number}\n        </Text>\n    {deleting ? <Oval height=\"20\" color=\"white\" /> : <Ul>\n      <li>\n        <DelBtn\n          id={id}\n          type=\"button\"\n          onClick={handleOpen}\n          startIcon={<DeleteIcon />}\n        >Delete\n        </DelBtn>\n      </li>\n      <li>\n        <UpdBtn\n          id={id}\n          type=\"button\"\n          onClick={showUpdModal}\n          startIcon={<ChangeCircleSharpIcon />}\n        >Update\n        </UpdBtn>\n      </li>\n    </Ul>}\n    <Toaster />\n    <Modal\n        open={open}\n        onClose={handleClose}>\n              <ModalBox>\n        <h2>Do you want to remove {name}?</h2>\n          <Ul>\n          <li><DelBtn type=\"button\"\n          onClick={handleClose}\n          >No</DelBtn></li>\n          <li><UpdBtn\n            type=\"button\"\n            onClick={() => {\n            handleDeleteContact(id)\n          }}>Yes</UpdBtn></li>\n          </Ul>\n        </ModalBox>\n    </Modal>\n    \n    <Modal\n      open={openUpd}\n      onClose={showUpdModal}\n    >\n      <ModalBox>\n        <h2>Update {name}?</h2>\n        <UpdateContact\n          name={name}\n          number={number}\n          handClose={showUpdModal}\n          onUpdate={handleContactUpdate}\n        />\n        </ModalBox>\n      </Modal>\n  </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"components/ContactItem/ContactItem.styled\";\nimport { Ul, DelBtn, UpdBtn } from \"components/ContactList/ContactsList.styled\";\nimport { notifySucces, notifyWarning } from \"components\";\n\nexport const UpdateContact = ({ name, number, onUpdate, handClose }) => {\n    const [rename, setRename] = useState(name);\n    const [renumber, setReNumber] = useState(number);\n\n  \n  const handleInputChange = ({ target }) => {\n    const { name, value } = target;\n    name === \"name\" ? setRename(value) : setReNumber(value);\n    };\n   \n    const handlerSubmit = (e) => {\n    e.preventDefault();  \n        \n    const contact = {\n      name: rename,\n      number: renumber,\n        };\n        \n        if (contact.name === name && contact.number === number) {\n            notifyWarning('Уou made no changes!');\n        } else {\n            onUpdate(contact);\n            notifySucces(`${name} has been updated!`);\n            setTimeout(() => { handClose() }, 1000);\n        };         \n  };\n\n    return (\n        <>\n            <Input type=\"text\" name=\"name\" value={rename} onChange={handleInputChange} autoComplete=\"off\" label=\"Name\"/>\n            <Input type=\"tel\" name=\"number\" value={renumber} onChange={handleInputChange} autoComplete=\"off\" label=\"Number\"/>\n            <Ul>\n                <li>\n                    <DelBtn type=\"button\"\n                        onClick={handClose}\n                    >No</DelBtn>\n                </li>\n                <li>\n                    <UpdBtn\n                        type=\"button\"\n                        onClick={handlerSubmit}\n                    >Update</UpdBtn>\n                </li>\n            </Ul>\n        </>\n    )\n};\n\n\nUpdateContact.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onUpdate: PropTypes.func,\n  handClose: PropTypes.func,\n};"],"names":["Form","styled","Label","Input","ContactForm","onSubmit","useForm","mode","register","errors","formState","handleSubmit","reset","name","number","required","minLength","value","message","pattern","title","style","height","Button","type","variant","color","List","Item","Text","Ul","UpdBtn","DelBtn","Div","SortBtn","ContactsList","sortedContacts","filteredContacts","sort","a","b","localeCompare","length","map","contact","ContactItem","id","Title","getFilter","state","filter","Filter","contacts","dispatch","useDispatch","useSelector","toLowerCase","includes","trim","Box","component","sx","m","width","noValidate","autoComplete","placeholder","onChange","target","inputСhange","TextField","label","backgroundColor","borderRadius","SectionTitle","Loader","notifySucces","text","toast","duration","fontWeight","fontSize","notifyError","notifyWarning","icon","FooterDiv","Typography","Footer","Bar","AppBar","Link","NavLink","Header","logged","getIsLoggedIn","Toolbar","PhoneIphone","mr","Stack","spacing","direction","ml","to","LogInForm","useState","visiblePass","setVisiblePass","toggleVisiblePass","e","email","password","login","setTimeout","position","VisibilityOff","top","right","onClick","Visibility","NewAccountForm","regUser","UserMenu","setState","getUserName","getUserEmail","logOut","logout","toggleDrawer","anchor","open","event","key","list","role","onKeyDown","ListItem","Avatar","bgcolor","deepPurple","alt","src","ListItemText","primary","ListItemIcon","Mail","startIcon","Logout","mt","alignItems","Fragment","cursor","Drawer","onClose","Main","ModalBox","useDeleteContactMutation","deleteContact","useUpdateContactMutation","updateContact","deleting","setDeleting","setOpen","handleClose","openUpd","setOpenUpd","showUpdModal","handleDeleteContact","unwrap","deepOrange","Delete","ChangeCircleSharp","Modal","UpdateContact","handClose","onUpdate","data","rename","setRename","renumber","setReNumber","handleInputChange","preventDefault"],"sourceRoot":""}